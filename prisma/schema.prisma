// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  password     String
  profileImage String?
  firstName    String
  lastName     String
  isActive     Boolean   @default(true)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deletedAt    DateTime?
  role         Role      @default(USER)
  blogs        Blog[]
  comments     Comment[]
  reply        Reply[]
}

model Blog {
  id          Int       @id @default(autoincrement())
  title       String
  imageUrl    String?
  description String
  blogContent String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  createdById Int
  author        User      @relation(fields: [createdById], references: [id])
  comments    Comment[]
}

model Comment {
  id            Int       @id @default(autoincrement())
  content       String
  createdAt     DateTime  @default(now())
  deletedAt     DateTime?
  commentedById Int
  blogId        Int
  user          User      @relation(fields: [commentedById], references: [id])
  blog          Blog      @relation(fields: [blogId], references: [id])
  replies       Reply[]
}

model Reply {
  id           Int       @id @default(autoincrement())
  content      String
  createdAt    DateTime  @default(now())
  deletedAt    DateTime?
  replyiedById Int
  commentId    Int
  user         User      @relation(fields: [replyiedById], references: [id])
  comment      Comment   @relation(fields: [commentId], references: [id])
}

enum Role {
  ADMIN
  USER
}
